import React, { useState } from 'react';
import './ProfileCard.css';

function ProfileCard({ profile }) {
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏¢‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠
    const getInitials = (name) => {
        return name
            .split(' ')
            .map(n => n[0])
            .join('')
            .toUpperCase();
    };

    // üéØ Challenge 2 + 3 States
    const [isDarkMode, setIsDarkMode] = useState(false);
    const [viewCount, setViewCount] = useState(0);
    const [favoriteHobbies, setFavoriteHobbies] = useState([]);
    const [showContactForm, setShowContactForm] = useState(false);

    // ‚úÖ Toggle Theme
    const toggleTheme = () => setIsDarkMode(!isDarkMode);

    // ‚úÖ Click Card ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏° View
    const handleCardClick = () => setViewCount(prev => prev + 1);

    // ‚úÖ Toggle Favorite Hobby
    const toggleFavoriteHobby = (hobby) => {
        setFavoriteHobbies(prev =>
            prev.includes(hobby)
                ? prev.filter(h => h !== hobby)
                : [...prev, hobby]
        );
    };

    // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠
    const handleContactClick = () => setShowContactForm(true);

    return (
        <div
            className={`profile-card ${isDarkMode ? 'dark' : ''}`}
            onClick={handleCardClick}
        >
            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏•‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î */}
            <button
                className="theme-toggle"
                onClick={(e) => {
                    e.stopPropagation();
                    toggleTheme();
                }}
            >
                {isDarkMode ? '‚òÄÔ∏è' : 'üåô'}
            </button>

            {/* View Counter */}
            <div className="view-counter">üëÅÔ∏è Views: {viewCount}</div>

            {/* Header */}
            <div className="profile-header">
                <div className="profile-avatar">{getInitials(profile.name)}</div>
                <h1 className="profile-name">{profile.name}</h1>
                <div className="student-id">{profile.studentId}</div>
            </div>

            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */}
            <div className="profile-info">
                <div className="info-item">
                    <div className="info-label">‡∏™‡∏≤‡∏Ç‡∏≤</div>
                    <div className="info-value">{profile.major}</div>
                </div>
                <div className="info-item">
                    <div className="info-label">‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ</div>
                    <div className="info-value">{profile.year}</div>
                </div>
                <div className="info-item">
                    <div className="info-label">‡∏≠‡∏≤‡∏¢‡∏∏</div>
                    <div className="info-value">{profile.age} ‡∏õ‡∏µ</div>
                </div>
                <div className="info-item">
                    <div className="info-label">‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢</div>
                    <div className="info-value">
                        {profile.gpa.toFixed(2)}
                        {profile.gpa >= 3.5 && ' üåü'}
                    </div>
                </div>
            </div>

            {/* Badges */}
            <div className="profile-section">
                <h3>üèÜ Achievements</h3>
                <div className="achievements">
                    {profile.gpa >= 3.5 && (
                        <span className="achievement-badge">üåü ‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ô‡∏¥‡∏¢‡∏°</span>
                    )}
                    {profile.skills.length >= 5 && (
                        <span className="achievement-badge">üí™ Multi-skilled</span>
                    )}
                    {favoriteHobbies.length >= 3 && (
                        <span className="achievement-badge">‚ù§Ô∏è Passionate Learner</span>
                    )}
                </div>
            </div>

            {/* ‡∏á‡∏≤‡∏ô‡∏≠‡∏î‡∏¥‡πÄ‡∏£‡∏Å */}
            <div className="profile-section">
                <h3>üéØ ‡∏á‡∏≤‡∏ô‡∏≠‡∏î‡∏¥‡πÄ‡∏£‡∏Å</h3>
                <ul className="hobbies-list">
                    {profile.hobbies.map((hobby, index) => (
                        <li
                            key={index}
                            className={`hobby-item ${favoriteHobbies.includes(hobby) ? 'favorite' : ''}`}
                            onClick={(e) => {
                                e.stopPropagation();
                                toggleFavoriteHobby(hobby);
                            }}
                        >
                            {hobby} {favoriteHobbies.includes(hobby) && 'üíñ'}
                        </li>
                    ))}
                </ul>
            </div>

            {/* ‡∏ó‡∏±‡∏Å‡∏©‡∏∞ */}
            <div className="profile-section">
                <h3>üíª ‡∏ó‡∏±‡∏Å‡∏©‡∏∞</h3>
                <div className="skills">
                    {profile.skills.map((skill, index) => (
                        <div key={index} className="skill-tag">
                            {skill}
                        </div>
                    ))}
                </div>
            </div>

            {/* ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏• */}
            {profile.social && (
                <div className="profile-section">
                    <h3>üåê Social Media</h3>
                    <div className="social-links">
                        {Object.entries(profile.social).map(([key, url], index) => (
                            <a
                                key={index}
                                href={url}
                                target="_blank"
                                rel="noreferrer"
                                className="social-link"
                            >
                                {key === 'facebook' && 'üìò'}
                                {key === 'github' && 'üêô'}
                                {key === 'instagram' && 'üì∏'}
                                {key === 'linkedin' && 'üíº'}
                            </a>
                        ))}
                    </div>
                </div>
            )}

            {/* Contact Section */}
            {showContactForm ? (
                <div className="contact-form">
                    <h3>üì© ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ {profile.name}</h3>
                    <form
                        onSubmit={(e) => {
                            e.preventDefault();
                            alert('‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!');
                        }}
                    >
                        <input type="text" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" required />
                        <input type="email" placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" required />
                        <textarea placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°..." required />
                        <button type="submit">‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</button>
                    </form>
                </div>
            ) : (
                <button
                    className="contact-button"
                    onClick={(e) => {
                        e.stopPropagation();
                        handleContactClick();
                    }}
                >
                    üìß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ {profile.name}
                </button>
            )}
        </div>
    );
}

export default ProfileCard;
